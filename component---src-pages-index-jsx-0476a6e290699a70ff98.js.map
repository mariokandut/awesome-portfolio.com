{"version":3,"sources":["webpack:///./src/components/SearchBar.jsx","webpack:///./src/components/Hero.jsx","webpack:///./src/components/DeveloperCard.jsx","webpack:///./src/components/Developers.jsx","webpack:///./src/useAllDeveloperPortfolios.jsx","webpack:///./src/pages/index.jsx"],"names":["IconWrapper","styled","div","StyledInput","input","Wrapper","HelperText","span","StyledInputWrapper","SearchBar","useState","searchText","setSearchText","column","type","placeholder","value","onChange","ev","target","Title","h1","Hero","LinkWrapper","p","TitleImage","Content","h3","Description","CardFooter","Tags","Tag","DeveloperCard","props","portfolioUrl","name","titleImage","description","tags","href","rel","style","backgroundImage","length","substring","map","tag","index","key","CardWrapper","Developers","portfolios","useStaticQuery","allMarkdownRemark","edges","node","frontmatter","id","childImageSharp","fixed","src","IndexPage","title"],"mappings":"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","file":"component---src-pages-index-jsx-0476a6e290699a70ff98.js","sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { FlexDiv } from '../styled';\r\nimport { FaSearch } from 'react-icons/fa';\r\n\r\nconst IconWrapper = styled.div`\r\n  position: absolute;\r\n  right: 1rem;\r\n  top: 1rem;\r\n`;\r\nconst StyledInput = styled.input`\r\n  border-radius: 1rem;\r\n  border: 0.125rem solid var(--text);\r\n  line-height: 2rem;\r\n  padding: 0.25rem 0.5rem;\r\n  color: var(--gray);\r\n  &:focus {\r\n    color: var(--text);\r\n    outline: none;\r\n    border-color: var(--primary);\r\n    ${IconWrapper} {\r\n      color: var(--primary);\r\n    }\r\n  }\r\n`;\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n  @media screen and (min-width: 1024px) {\r\n    width: 50%;\r\n  }\r\n  margin: 1rem auto;\r\n`;\r\nconst HelperText = styled.span`\r\n  font-size: 75%;\r\n  color: var(--text);\r\n`;\r\nconst StyledInputWrapper = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport const SearchBar = () => {\r\n  const [searchText, setSearchText] = useState('');\r\n  return (\r\n    <Wrapper>\r\n      <FlexDiv column>\r\n        <StyledInputWrapper>\r\n          <StyledInput\r\n            type=\"text\"\r\n            placeholder=\"frontend developer\"\r\n            value={searchText}\r\n            onChange={(ev) => setSearchText(ev.target.value)}\r\n          />\r\n          <IconWrapper>\r\n            <FaSearch />\r\n          </IconWrapper>\r\n        </StyledInputWrapper>\r\n        <HelperText>Search by name, technology</HelperText>\r\n      </FlexDiv>\r\n    </Wrapper>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { FlexDiv } from '../styled/index';\r\nimport styled from 'styled-components';\r\nimport { SearchBar } from './SearchBar';\r\n\r\nconst Wrapper = styled.div`\r\n  text-align: center;\r\n  min-height: 50vh;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  color: var(--primary);\r\n`;\r\n\r\nconst Hero = () => {\r\n  return (\r\n    <Wrapper>\r\n      <FlexDiv column>\r\n        <Title>Hello Developer</Title>\r\n        <p>\r\n          We are building an index for awesome developer portfolios,\r\n          <br />\r\n          as a source for inspiration, information and, as an awesome\r\n          showcase.\r\n          <br />\r\n          <br />\r\n          <i>\r\n            This project is <b>work in progress</b>. Help is more than\r\n            welcome.\r\n          </i>\r\n        </p>\r\n        <SearchBar />\r\n      </FlexDiv>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { FaLink } from 'react-icons/fa';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst LinkWrapper = styled.p`\r\n  position: absolute;\r\n  bottom: 1rem;\r\n  margin: 0;\r\n  right: 0.5rem;\r\n  color: var(--text);\r\n  font-size: 1rem;\r\n  line-height: 1;\r\n`;\r\nconst Wrapper = styled.div`\r\n  width: 280px;\r\n  height: 320px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0.5rem;\r\n  @media screen and (min-width: 375px) {\r\n    margin: 1rem;\r\n    width: 300px;\r\n  }\r\n  border-radius: 1rem;\r\n  box-shadow: 2px 2px 20px 2px rgba(0, 0, 0, 0.1);\r\n  transition: 0.4s ease-out;\r\n  overflow: hidden;\r\n\r\n  &:hover {\r\n    box-shadow: 2px 2px 20px 2px rgba(0, 0, 0, 0.4);\r\n    ${LinkWrapper} {\r\n      border-color: var(--primary);\r\n      color: var(--primary);\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    margin: 0.6rem;\r\n  }\r\n`;\r\nconst TitleImage = styled.div`\r\n  height: 150px;\r\n  width: 100%;\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  position: relative;\r\n  border-top-right-radius: 10px;\r\n  border-top-left-radius: 10px;\r\n`;\r\nconst Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1;\r\n  margin: 1rem 1rem 0 1rem;\r\n  position: relative;\r\n`;\r\nconst Title = styled.h3`\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  line-height: 1.5;\r\n  color: var(--text);\r\n  margin-bottom: 0.5rem;\r\n`;\r\nconst Description = styled.p`\r\n  font-size: 0.75rem;\r\n  margin: 0;\r\n  line-height: 1.25rem;\r\n`;\r\nconst CardFooter = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  bottom: 0;\r\n}`;\r\nconst Tags = styled.p``;\r\nconst Tag = styled.span`\r\n  font-size: 0.5rem;\r\n  margin: 0 0.25rem;\r\n  text-transform: uppercase;\r\n`;\r\n\r\nexport const DeveloperCard = (props) => {\r\n  const { portfolioUrl, name, titleImage, description, tags } = props;\r\n  return (\r\n    <a\r\n      href={`https://${portfolioUrl}`}\r\n      target=\"_blank\"\r\n      rel=\"nofollow noopener noreferrer\"\r\n    >\r\n      <Wrapper>\r\n        <TitleImage\r\n          style={{\r\n            backgroundImage: `url(${titleImage})`,\r\n          }}\r\n        />\r\n        <Content>\r\n          <Title>{name}</Title>\r\n          <Description>\r\n            {description.length > 100\r\n              ? `${description.substring(0, 100)}...`\r\n              : description}\r\n          </Description>\r\n\r\n          <CardFooter>\r\n            <Tags>\r\n              {tags.map((tag, index) => (\r\n                <Tag key={index}>{tag}</Tag>\r\n              ))}\r\n            </Tags>\r\n            <LinkWrapper>\r\n              <FaLink />\r\n            </LinkWrapper>\r\n          </CardFooter>\r\n        </Content>\r\n      </Wrapper>\r\n    </a>\r\n  );\r\n};\r\n\r\nDeveloperCard.propTypes = {\r\n  portfolioUrl: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  titleImage: PropTypes.any.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n  tags: PropTypes.array.isRequired,\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { DeveloperCard } from './DeveloperCard';\r\nimport useAllDeveloperPortfolios from '../useAllDeveloperPortfolios';\r\n\r\nconst Wrapper = styled.div``;\r\nconst Title = styled.h3``;\r\nconst CardWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const Developers = () => {\r\n  const portfolios = useAllDeveloperPortfolios();\r\n  return (\r\n    <Wrapper>\r\n      <Title>All Developers</Title>\r\n      <CardWrapper>\r\n        {portfolios.map(({ node }) => {\r\n          const {\r\n            name,\r\n            portfolioUrl,\r\n            titleImage,\r\n            description,\r\n            tags,\r\n          } = node.frontmatter;\r\n          return (\r\n            <DeveloperCard\r\n              key={node.id}\r\n              portfolioUrl={portfolioUrl}\r\n              name={name}\r\n              titleImage={titleImage.childImageSharp.fixed.src}\r\n              description={description}\r\n              tags={tags}\r\n            />\r\n          );\r\n        })}\r\n      </CardWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n","import { useStaticQuery, graphql } from 'gatsby';\r\n\r\nexport default function useAllDeveloperPortfolios() {\r\n  const { allMarkdownRemark } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        allMarkdownRemark(\r\n          sort: { order: DESC, fields: [frontmatter___date] }\r\n        ) {\r\n          edges {\r\n            node {\r\n              id\r\n              frontmatter {\r\n                description\r\n                slug\r\n                mainTag\r\n                tags\r\n                name\r\n                titleImage {\r\n                  childImageSharp {\r\n                    fixed(height: 200) {\r\n                      src\r\n                    }\r\n                  }\r\n                }\r\n                portfolioUrl\r\n                description\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `,\r\n  );\r\n\r\n  return allMarkdownRemark.edges;\r\n}\r\n","import React from 'react';\r\n\r\nimport Layout from '../components/layout';\r\nimport SEO from '../components/seo';\r\nimport Hero from '../components/Hero';\r\nimport '../index.css';\r\nimport { Developers } from '../components/Developers';\r\n\r\nconst IndexPage = () => (\r\n  <Layout>\r\n    <SEO title=\"Home\" />\r\n    <Hero />\r\n    <Developers />\r\n  </Layout>\r\n);\r\n\r\nexport default IndexPage;\r\n"],"sourceRoot":""}