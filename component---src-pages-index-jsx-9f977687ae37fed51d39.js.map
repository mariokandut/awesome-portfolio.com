{"version":3,"file":"component---src-pages-index-jsx-9f977687ae37fed51d39.js","mappings":"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","sources":["webpack://awesome-portfolio.com/./src/components/Hero.jsx","webpack://awesome-portfolio.com/./src/components/DeveloperCard.jsx","webpack://awesome-portfolio.com/./src/components/SearchBar.jsx","webpack://awesome-portfolio.com/./src/components/Developers.jsx","webpack://awesome-portfolio.com/./src/useAllDeveloperPortfolios.jsx","webpack://awesome-portfolio.com/./src/pages/index.jsx"],"sourcesContent":["import React from 'react';\nimport { FlexDiv } from '../styled/index';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  text-align: center;\n`;\n\nconst Title = styled.h1`\n  color: var(--primary);\n`;\n\nconst Hero = () => {\n  return (\n    <Wrapper>\n      <FlexDiv column>\n        <Title>Hello Developer</Title>\n        <p>\n          We are building an index for awesome developer portfolios,\n          <br />\n          as a source for inspiration, information and, as an awesome\n          showcase.\n          <br />\n          <br />\n          <i>\n            This project is <b>work in progress</b>. Help is more than\n            welcome.\n          </i>\n        </p>\n      </FlexDiv>\n    </Wrapper>\n  );\n};\n\nexport default Hero;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FaLink } from 'react-icons/fa';\nimport PropTypes from 'prop-types';\n\nconst LinkWrapper = styled.p`\n  position: absolute;\n  bottom: 1rem;\n  margin: 0;\n  right: 0.5rem;\n  color: var(--text);\n  font-size: 1rem;\n  line-height: 1;\n`;\nconst Wrapper = styled.div`\n  width: 280px;\n  height: 320px;\n  display: flex;\n  flex-direction: column;\n  margin: 0.5rem;\n  @media screen and (min-width: 375px) {\n    margin: 1rem;\n    width: 300px;\n  }\n  border-radius: 1rem;\n  box-shadow: 2px 2px 20px 2px rgba(0, 0, 0, 0.1);\n  transition: 0.4s ease-out;\n  overflow: hidden;\n\n  &:hover {\n    box-shadow: 2px 2px 20px 2px rgba(0, 0, 0, 0.4);\n    ${LinkWrapper} {\n      border-color: var(--primary);\n      color: var(--primary);\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    margin: 0.6rem;\n  }\n`;\nconst TitleImage = styled.div`\n  height: 150px;\n  width: 100%;\n  background-size: 300px;\n  background-position: center center;\n  background-repeat: no-repeat;\n  position: relative;\n  border-top-right-radius: 10px;\n  border-top-left-radius: 10px;\n`;\nconst Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  margin: 1rem 1rem 0 1rem;\n  position: relative;\n`;\nconst Title = styled.h3`\n  font-size: 1rem;\n  font-weight: bold;\n  line-height: 1.5;\n  color: var(--text);\n  margin-bottom: 0.5rem;\n`;\nconst Description = styled.p`\n  font-size: 0.75rem;\n  margin: 0;\n  line-height: 1.25rem;\n`;\nconst CardFooter = styled.div`\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n`;\nconst Tags = styled.p`\n  margin-bottom: 1rem;\n`;\nconst Tag = styled.span`\n  font-size: 0.5rem;\n  margin: 0 0.25rem;\n  text-transform: uppercase;\n`;\n\nexport const DeveloperCard = (props) => {\n  const { portfolioUrl, name, titleImage, description, tags } = props;\n  return (\n    <a\n      href={`https://${portfolioUrl}`}\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Wrapper>\n        <TitleImage\n          style={{\n            backgroundImage: `url(${titleImage})`,\n          }}\n        />\n        <Content>\n          <Title>{name}</Title>\n          <Description>\n            {description.length > 100\n              ? `${description.substring(0, 100)}...`\n              : description}\n          </Description>\n\n          <CardFooter>\n            <Tags>\n              {tags.map((tag, index) => (\n                <Tag key={index}>{tag}</Tag>\n              ))}\n            </Tags>\n            <LinkWrapper>\n              <FaLink />\n            </LinkWrapper>\n          </CardFooter>\n        </Content>\n      </Wrapper>\n    </a>\n  );\n};\n\nDeveloperCard.propTypes = {\n  portfolioUrl: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  titleImage: PropTypes.any.isRequired,\n  description: PropTypes.string.isRequired,\n  tags: PropTypes.array.isRequired,\n};\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { FlexDiv } from '../styled';\nimport { FaSearch } from 'react-icons/fa';\n\nconst IconWrapper = styled.div`\n  position: absolute;\n  right: 1rem;\n  top: 1rem;\n`;\nconst StyledInput = styled.input`\n  border-radius: 1rem;\n  border: 0.125rem solid var(--text);\n  line-height: 2rem;\n  padding: 0.25rem 0.5rem;\n  color: var(--gray);\n  &:focus {\n    color: var(--text);\n    outline: none;\n    border-color: var(--primary);\n    ${IconWrapper} {\n      color: var(--primary);\n    }\n  }\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  @media screen and (min-width: 1024px) {\n    width: 50%;\n  }\n  margin: 1rem auto;\n`;\nconst HelperText = styled.span`\n  font-size: 75%;\n  color: var(--text);\n`;\nconst StyledInputWrapper = styled.div`\n  position: relative;\n`;\n\n\n\nexport const SearchBar = (props) => {\n  const [searchText, setSearchText] = useState('');\n  const handleChange = (ev) => {\n      const filter = ev.target.value;\n      setSearchText(filter);\n      props.cb(filter.trim().toLowerCase());\n  }\n  return (\n    <Wrapper>\n      <FlexDiv column>\n        <StyledInputWrapper>\n          <StyledInput\n            type=\"text\"\n            placeholder=\"frontend developer\"\n            value={searchText}\n            onChange={handleChange}\n          />\n          <IconWrapper>\n            <FaSearch />\n          </IconWrapper>\n        </StyledInputWrapper>\n        <HelperText>Search by name, technology</HelperText>\n      </FlexDiv>\n    </Wrapper>\n  );\n};\n","import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport { DeveloperCard } from './DeveloperCard';\nimport useAllDeveloperPortfolios from '../useAllDeveloperPortfolios';\nimport {SearchBar} from \"./SearchBar\";\n\nconst Wrapper = styled.div``;\nconst Title = styled.h3``;\nconst CardWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\n\nexport const Developers = () => {\n  const portfolios = useAllDeveloperPortfolios();\n  const [filter, setFilter] = useState('');\n  return (\n    <Wrapper>\n      <SearchBar cb={ev => setFilter(ev)}/>\n      <Title>All Developers</Title>\n      <CardWrapper>\n        {portfolios.filter(({node}) => filter.length ? node.frontmatter.name.toLowerCase().includes(filter) || node.frontmatter.tags.indexOf(filter) !== -1 : true).map(({ node }) => {\n          const {\n            name,\n            portfolioUrl,\n            titleImage,\n            description,\n            tags,\n          } = node.frontmatter;\n          return (\n            <DeveloperCard\n              key={node.id}\n              portfolioUrl={portfolioUrl}\n              name={name}\n              titleImage={titleImage.childImageSharp.fixed.src}\n              description={description}\n              tags={tags}\n            />\n          );\n        })}\n      </CardWrapper>\n    </Wrapper>\n  );\n};\n","import { useStaticQuery, graphql } from 'gatsby';\n\nexport default function useAllDeveloperPortfolios() {\n  const { allMarkdownRemark } = useStaticQuery(\n    graphql`\n    query AllDeveloperPortfolios {\n      allMarkdownRemark(sort: {frontmatter: {date: DESC}}) {\n        edges {\n          node {\n            id\n            frontmatter {\n              description\n              slug\n              mainTag\n              tags\n              name\n              titleImage {\n                childImageSharp {\n                  fixed(height: 200) {\n                    src\n                  }\n                }\n              }\n              portfolioUrl\n              description\n            }\n          }\n        }\n      }\n    }`,\n  );\n\n  return allMarkdownRemark.edges;\n}\n","import React from 'react';\n\nimport Layout from '../components/layout';\nimport Seo from '../components/seo';\nimport Hero from '../components/Hero';\nimport '../index.css';\nimport { Developers } from '../components/Developers';\n\n\nconst IndexPage = () => (\n  <Layout>\n    <Seo title=\"Home\" />\n    <Hero />\n    <Developers />\n  </Layout>\n);\n\nexport default IndexPage;\n"],"names":["Wrapper","styled","div","withConfig","displayName","componentId","Title","h1","Hero","React","FlexDiv","column","LinkWrapper","p","TitleImage","Content","h3","Description","CardFooter","Tags","Tag","span","DeveloperCard","props","portfolioUrl","name","titleImage","description","tags","href","target","rel","style","backgroundImage","length","substring","map","tag","index","key","FaLink","IconWrapper","StyledInput","input","HelperText","StyledInputWrapper","SearchBar","searchText","setSearchText","useState","type","placeholder","value","onChange","ev","filter","cb","trim","toLowerCase","FaSearch","CardWrapper","Developers","portfolios","allMarkdownRemark","useStaticQuery","edges","useAllDeveloperPortfolios","setFilter","_ref","node","frontmatter","includes","indexOf","_ref2","id","childImageSharp","fixed","src","IndexPage","Layout","Seo","title"],"sourceRoot":""}